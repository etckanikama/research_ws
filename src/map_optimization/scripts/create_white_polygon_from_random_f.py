# create_candidate_fでfを1.5mで分割した座標：配置問題を解いたものではない
f = {'f0': (6.84375, 0.5075000000000001, 'x-long'), 'f1': (4.5625, 0.5075000000000001, 'x-long'), 'f2': (2.28125, 0.5075000000000001, 'x-long'), 'f3': (0.0, 0.5075000000000001, 'x-long'), 'f4': (11.355, 1.7974999999999999, 'x-long'), 'f5': (11.41, 0.7875, 'x-long'), 'f6': (11.4475, -1.4249999999999998, 'y-long'), 'f7': (11.4475, -3.5999999999999996, 'y-long'), 'f8': (10.057500000000001, -3.6, 'y-long'), 'f9': (8.076, -0.5075000000000001, 'x-long'), 'f10': (6.057, -0.5075000000000001, 'x-long'), 'f11': (4.038, -0.5075000000000001, 'x-long'), 'f12': (2.019, -0.5075000000000001, 'x-long'), 'f13': (0.0, -0.5075000000000001, 'x-long'), 'f14': (0.5075000000000001, -3.6099999999999994, 'y-long'), 'f15': (1.3824999999999998, -3.6099999999999994, 'y-long'), 'f16': (2.2875, -3.6099999999999994, 'y-long'), 'f17': (3.2975, -3.6099999999999994, 'y-long'), 'f18': (4.1875, -3.6099999999999994, 'y-long'), 'f19': (5.2125, -3.6099999999999994, 'y-long'), 'f20': (6.0875, -3.6099999999999994, 'y-long'), 'f21': (7.12, -3.6099999999999994, 'y-long'), 'f22': (7.9975000000000005, -3.6099999999999994, 'y-long'), 'f23': (9.342500000000001, -3.6099999999999994, 'y-long')}



polygon_ros = { 0:[[912.5,54.5],[912.5,47.0],[0.0,47.0],[0.0,54.5]],
                1:[[912.5,193.5],[912.5,54.5],[905.0,54.5],[905.5, 193.5]],
                2:[[1020.5,193.5],[1020.5,186.0],[912.5,186.0],[912.5,193.5]],
                3:[[1020.5,301.0],[1020.5,193.5],[1013.0,193.5],[1013.0,301.0]],
                4:[[1135.5,301.0],[1135.5,176.0],[1128.0,176.0],[1128.0,301.0]],
                5:[[1263.0,183.5],[1263.0,176.0],[1135.5,176.0],[1135.5,183.5]],
                6:[[1263.0,82.0],[1263.0,75.0],[1141.0,75.0],[1141.0,82.0]],
                7:[[1148.5,75.0],[1148.5,-361.0],[1141.0,-361.0],[1141.0, 75.0]],
                8:[[1009.5,-54.5],[1009.5,-361.0],[1002.0,-361.0],[1002.0,-54.5]],
                9:[[1009.5,-47.0],[1009.5,-54.5],[0.0,-54.5],[0.0,-47.0]],
                10:[[54.5,-146.5],[54.5,-361.0],[47.0,-361.0],[47.0,-146.5]],
                11:[[134.5,-146.5],[134.5,-154.0],[54.5,-154.0],[54.5,-146.5]],
                12:[[142.0,-146.5],[142.0,-361.0],[134.5,-361.0],[134.5,-146.5]],
                13:[[232.5,-146.5],[232.5,-361.0],[225.0,-361.0],[225.0,-146.5]],
                14:[[326.0,-146.5],[326.0,-154.0],[232.5,-154.0],[232.5,-146.5]],
                15:[[333.5,-146.5],[333.5,-361.0],[326.0,-361.0],[326.0,-146.5]],
                16:[[422.5,-146.5],[422.5,-361.0],[415.0,-361.0],[415.0,-146.5]],
                17:[[517.5,-146.5],[517.5,-154.0],[422.5,-154.0],[422.5,-146.5]],
                18:[[525.0,-146.5],[525.0,-361.0],[517.5,-361.0],[517.5,-146.5]],
                19:[[612.5,-146.5],[612.5,-361.0],[605.0,-361.0],[605.0,-146.5]],
                20:[[708.5,-146.5],[708.5,-154.0],[612.5,-154.0],[612.5,-146.5]],
                21:[[716.0,-146.5],[716.0,-361.0],[708.0,-361.0],[708.0,-146.5]],
                22:[[803.5,-146.5],[803.5,-361.0],[796.0,-361.0],[796.0,-146.5]],
                23:[[930.5,-146.5],[930.5,-154.0],[805.5,-154.0],[805.5,-146.5]],
                24:[[938.0,-146.5],[938.0,-361.0],[930.5,-361.0],[930.5,-146.5]],}

# ros_to_cv.py用のフォーマットでにする
hige_length = 0.3
hige_thickness = 0.075/2

max_key = max(polygon_ros.keys())

for key in f:
    x, y, state = f[key]
    max_key += 1
    if state == 'x-long':
        y_max = y + hige_length
        y_min = y - hige_length
        x_max = x + hige_thickness
        x_min = x - hige_thickness
    elif state == 'y-long':
        x_max = x + hige_length
        x_min = x - hige_length
        y_max = y + hige_thickness
        y_min = y - hige_thickness

    # 新しいポリゴンの座標を計算し、辞書に追加
    polygon_ros[max_key] = [[x_max * 100, y_max * 100], [x_max * 100, y_min * 100], [x_min * 100, y_min * 100], [x_min * 100, y_max * 100]]


# 結果を表示
for key, value in polygon_ros.items():
    print(f"{key}: {value},")